# ===========================JamesKid=================================
# Description     : this file is teach  you how to use github in linux
# date            : 2013_12_13_11_00
# Author          : JamesKid 
# Version         : v1.00
# Email           : 406358964@qq.com
# ====================================================================

# basic use 
	# 1. how to clone repo from github
		1.config local ssh key 
			# cd ~/.ssh
			# ssh-keygen -t rsa -C "YourEmail"
			press enter to continue
            # tips 
                # 重新生成key后会报错
                # 如果报错　 Agent admitted failure to sign using the key 
                # 解决：　命令行下执行 ssh-add  命令即可

		2.add ssh key to github 
			login your github,then --> account-setting -->SSH Keys --> Add SSH Key 
			input a title to "Title"
			input  ~/.ssh/iid_rsa.pub conent to "Key"

		3.clone it from github to localhost 
			# mkdir php
			# cd php
			# git clone git@github.com:YourAccountName/RepositoriesName

		4.test 
			# touch test1
			# git add test1
			# git commit -m "test1"

		5.push it to github
			# git push 
		
	# 2. how to pull local to github first time 
		1. create a repo in github 

		2. do this in your localhost path where you want to upload
			git init 
			git add yourfile
			git commit -m "first commit"
			git remote add origin https://yourname@github.com/yourname/reponame.git
			git push -u origin master
			# then input your password

	# 3. push an existing repository 
		git push -u origin master
# branch 
	# create branch 
		git branch new_branch
	# change to branch 
		git checkout new_branch 	
	# create branch and change to branch 
		git checkout -b new_branch
	# push branch to remote (提交到远程分支)
		git commit -a -m 'my new branch'
		git push origin branchName:branchName  # 提交分支
	# push branch to master(把本地的某个分支mybranch提交到远程仓库，并作为远程仓库的master分支
		git push origin mybranch:master
	# show remote branch (查看远程分支)
		git branch -r
	# delete (删除分支)
		git push origin:branchName  #  删除远程分支
		git branch -d branchName    #  删除本地分支，强制删除用-D
	# merge (分支合并)
		git merge branchName    # 将分支branchName和当前所在分支合并

	# push branch 
# user
	# add user 
		vim ~/.gitconfig
			[user]
				name = username
				email = email
			[color]
				ui = true
			[alias] 
				glog = log --graph
	# change user 
		vim ~/.gitconfig
			[user]
				name = change_username
				email = change_email
			[color]
				ui = true
			[alias] 
				glog = log --graph
# tag (标签)
	# 功能描述,
		跟分支无关，只是在当前代码状态下打一个标记，下次还可以切换到这个标记,相当于是一个释放的版本号
	# use
		git tag    # 查看标签
		git tag -l # 查看标签
		git tag -a v1.01 -m "Relase version 1.01" # 添加tag
		git push origin --tags                     # 提交标签到远程仓库
		git tag -d v1.01     # 删除标签
		git push origin :refs/tags/v1.01   # 删除远程标签


# checkout
	# back to the latest file status
		git checkout filename	# checkout by filename   (恢复未提交的删除)
		git checkout <commit hash>   #　检出历史版本
		git checkout <commit hash>:<file> >test1.txt   #　检出历史版本
# branch  (分支)
	# create (创建分支)
		git branch local # add a branch named 'local'
		git branch       # show all branch  * means the branch you in 
		git checkout local # go to local branch 
	# merge (合并分支)
		git checkout master  # 将当前分支切换为master
		git merge local      # 将local分支与当前分支合并
		git branch -d local  # 删除local 分支
# hook
	# github webhook
		1. linux创建用户www,添加密码
		2. 切换到www用户
		3. 在~/.ssh创建id_rsa.pub 并拷贝到github主仓库上的ssh-key
		4.  在home配置用户
			vim ~/.gitconfig
				[user]
					name = username
					email = xx@xx.com
				[color]
					ui = true
				[alias] 
					glog = log --graph
		5. 将nginx.conf ,php-fpm.conf 用户配置为www,重启服务,或重启系统  (配置方法查看nginx_command.sh)
		6. 创建可以访问的webhook钩子脚本
			# 无密码脚本(content type 为x-www-form-urlencoded)
			vim www.xxx.com/push.php 
				<?php
					set_time_limit(1800);
					error_reporting ( E_ALL );
					$dir = '/var/www/team/teach/teach/';//该目录为git检出目录
					$handle = popen('cd '.$dir.' && git pull 2>&1','r');
					$read = stream_get_contents($handle);
					printf($read);
					pclose($handle);
				?>
			# 有密码secret (content type 为application/json)
			vim www.xxx.com/push.php
				<?php
					set_time_limit(1800);
					$secret = "mysettingsecret";
					$signature = $_SERVER['HTTP_X_HUB_SIGNATURE'];
					if ($signature) {
						$hash = "sha1=".hash_hmac('sha1', $HTTP_RAW_POST_DATA, $secret);
							print_r($signature);
							print_r($hash);
						if (strcmp($signature, $hash) == 0) {
							echo shell_exec("git pull");
							exit();
						}
					}
					http_response_code(404);
				?>
				
		7. 在github上创建webhook
			  # payload
				www.xxx.com/push.php
			  # content type 
				x-www-form-urlencoded
			  # with events would you like to trigger this webhook? 
			  # active 
				 select (勾选)
				 点击 update webhook
		# 全局邮箱配置方法
			git config --global user.name “xxx”  
			git config --global user.email “xxx@xxx.com"  
		# 常见问题
			# git pull error: cannot open .git/FETCH_HEAD: Permission denied 原因和解决 
			将.git/目录给与www操作权限
			
# member (协作者,共同开发者)
	# first 
		change user 
	# second
		# 用这个方式可以免除密码
		git clone git@github.com:helpprojectname/test.git	
		git push origin master

# pull 
	# 查看本地
		git stash	# 备份当前工作区的内容
		git pull
		git stash pop #从Git栈中读取最近一次保存的内容，恢复工作区的相关内容。由于可能存在多个Stash的内容，所以用栈来管理，pop会从最近的一个stash中读取内容并恢复。
		git stash list # 显示Git栈内的所有备份，可以利用这个列表来决定从那个地方恢复。
		git stash clear #清空Git栈。此时使用gitg等图形化工具会发现，原来stash的哪些节点都消失了。
	# 强行覆盖本地
		# method1 
			git reset --hard
			git pull
		# method2
			git fetch --all  
			git reset --hard origin/master 
			git pull

# install my git server 
	# teach web 
		http://www.2cto.com/os/201302/188366.html
	# server
		yum install git
		setenforce 0  # close selinux
		sudo adduser git 
		su git 
		cd ~
		mkdir .ssh
		cd work
		mkdir /home/git/work/project.git 
		cd project.git
		git --bare init # init git server repo

	# client 
		# init git 
			cd ~/.ssh 
			ssh-keygen
			cat id_rsa.pub >> /mnt/server/home/.ssh/authorized_keys
			cd /var/my_project
			git init
			touch test.txt
			git add test.txt
			git commit -m " add test.txt file "
			git remote add origin ssh://git@ip/home/git/work/project.git
			# git remote add origin ssh://git@ip:端口/home/git/work/project.git
			git push origin master

		# clone git 
			git clone ssh://git@ip/home/git/work/project.git

		# remote 更新ip
			git remote rm origin
			git remote add origin ssh://git@ip/home/git/work/project.git # 本地更新
			#git remote add origin https://yourname@github.com/yourname/reponame.git# web服务器端更新
			git push origin master
        # 查看远程仓库地址
            git remote -v


# find
#	# find the files history 
		# web 
			http://git-scm.com/book/zh/v1/Git-%E5%9F%BA%E7%A1%80-%E6%9F%A5%E7%9C%8B%E6%8F%90%E4%BA%A4%E5%8E%86%E5%8F%B2
		# example
			git log --pretty=oneline <filename>   # 查看提交历史
			git log -p -2      # 查看最近的两次详细提交对比
		# options 
			-p          	按补丁格式显示每个更新之间的差异。
			--word-diff		按 word diff 格式显示差异。
			--stat	        显示每次更新的文件修改统计信息。
			--shortstat		只显示 --stat 中最后的行数修改添加移除统计。
			--name-only		仅在提交信息后显示已修改的文件清单。
			--name-status	显示新增、修改、删除的文件清单。
			--abbrev-commit		仅显示 SHA-1 的前几个字符，而非所有的 40 个字符。
			--relative-date		使用较短的相对时间显示（比如，“2 weeks ago”）。
			--graph		    显示 ASCII 图形表示的分支合并历史。
			--pretty	    使用其他格式显示历史提交信息。可用的选项包括 oneline，short，full，fuller 和 format（后跟指定格式）。
			--oneline	    --pretty=oneline --abbrev-commit 的简化用法。
#	# show the history content
		git show hashid

# error
	# 403 github push错误The requested URL returned error: 403 Forbidden while accessing 
		vim .git/config  # 在git项目目录下编辑config
		# 改 origin 节点 url = https://github.com/wangz/example.git   为如下
		url = https://wangz@github.com/wangz/example.git  
		git push  #　就ok了
		
	# permission denied (publickey ) fatal:
		# The remote end hung up unexpectedly 
		# in windows 7 
			# 1. open git.bash
			# 2. ssh-keygen
			# 3. copy the '~/.ssh/id_rsa.pub'  file content to your githubweb ssh-key  
			# test
	# not currently on any branch 
		git checkout master		# checkout master
		git pull				# pull file
		git push				# push file
	# Agent admitted failure to sign usering the key 
		重新生成 sshkey
		ssh-add  # 当前用户用执行ssh-add



