# Description     : this file is teach  you how to use github in linux
# date            : 2013_12_13_11_00
# Author          : JamesKid 
# Version         : v1.00
# Email           : 406358964@qq.com

# basic use 
	# 1. how to clone repo from github
		1.config local ssh key 
			# cd ~/.ssh
			# ssh-keygen -t rsa -C "YourEmail"
			press enter to continue

		2.add ssh key to github 
			login your github,then --> account-setting -->SSH Keys --> Add SSH Key 
			input a title to "Title"
			input  ~/.ssh/iid_rsa.pub conent to "Key"

		3.clone it from github to localhost 
			# mkdir php
			# cd php
			# git clone git@github.com:YourAccountName/RepositoriesName

		4.test 
			# touch test1
			# git add test1
			# git commit -m "test1"

		5.push it to github
			# git push 
		
	# 2. how to pull local to github first time 
		1. create a repo in github 

		2. do this in your localhost path where you want to upload
			git init 
			git add yourfile
			git commit -m "first commit"
			git remote add origin https://yourname@github.com/yourname/reponame.git
			git push -u origin master
			# then input your password

	# 3. push an existing repository 
		git push -u origin master

# checkout
	# back to the latest file status
		git checkout filename	# checkout by filename   (恢复未提交的删除)
		git checkout <commit hash>   #　检出历史版本
		git checkout <commit hash>:<file> >test1.txt   #　检出历史版本
# branch  (分支)
	# create (创建分支)
		git branch local # add a branch named 'local'
		git branch       # show all branch  * means the branch you in 
		git checkout local # go to local branch 
	# merge (合并分支)
		git checkout master  # 将当前分支切换为master
		git merge local      # 将local分支与当前分支合并
		git branch -d local  # 删除local 分支



# pull 
	# 查看本地
		git stash	# 备份当前工作区的内容
		git pull
		git stash pop #从Git栈中读取最近一次保存的内容，恢复工作区的相关内容。由于可能存在多个Stash的内容，所以用栈来管理，pop会从最近的一个stash中读取内容并恢复。
		git stash list # 显示Git栈内的所有备份，可以利用这个列表来决定从那个地方恢复。
		git stash clear #清空Git栈。此时使用gitg等图形化工具会发现，原来stash的哪些节点都消失了。
	# 强行覆盖本地
		git reset --hard
		git pull

# install my git server 
	# teach web 
		http://www.2cto.com/os/201302/188366.html
	# server
		yum install git
		setenforce 0  # close selinux
		sudo adduser git 
		su git 
		cd ~
		mkdir .ssh
		cd work
		mkdir /home/git/work/project.git 
		cd project.git
		git --bare init # init git server repo

	# client 
		# init git 
			cd ~/.ssh 
			ssh-keygen
			cat id_rsa.pub >> /mnt/server/home/.ssh/authorized_keys
			cd /var/my_project
			git init
			touch test.txt
			git add test.txt
			git commit -m " add test.txt file "
			git remote add origin ssh://git@ip/home/git/work/project.git
			git push origin master

		# clone git 
			git clone ssh://git@ip/home/git/work/project.git


# find
#	# find the files history 
		# web 
			http://git-scm.com/book/zh/v1/Git-%E5%9F%BA%E7%A1%80-%E6%9F%A5%E7%9C%8B%E6%8F%90%E4%BA%A4%E5%8E%86%E5%8F%B2
		# example
			git log --pretty=oneline <filename>   # 查看提交历史
			git log -p -2      # 查看最近的两次详细提交对比
		# options 
			-p          	按补丁格式显示每个更新之间的差异。
			--word-diff		按 word diff 格式显示差异。
			--stat	        显示每次更新的文件修改统计信息。
			--shortstat		只显示 --stat 中最后的行数修改添加移除统计。
			--name-only		仅在提交信息后显示已修改的文件清单。
			--name-status	显示新增、修改、删除的文件清单。
			--abbrev-commit		仅显示 SHA-1 的前几个字符，而非所有的 40 个字符。
			--relative-date		使用较短的相对时间显示（比如，“2 weeks ago”）。
			--graph		    显示 ASCII 图形表示的分支合并历史。
			--pretty	    使用其他格式显示历史提交信息。可用的选项包括 oneline，short，full，fuller 和 format（后跟指定格式）。
			--oneline	    --pretty=oneline --abbrev-commit 的简化用法。
#	# show the history content
		git show hashid

# error
	# permission denied (publickey ) fatal:
	# The remote end hung up unexpectedly 
	# in windows 7 
		# 1. open git.bash
		# 2. ssh-keygen
		# 3. copy the '~/.ssh/id_rsa.pub'  file content to your githubweb ssh-key  
		# test
	# not currently on any branch 
		git checkout master		# checkout master
		git pull				# pull file
		git push				# push file

